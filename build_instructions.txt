1. Generate scaffold resources:

a. Posts:

rails generate scaffold post title:string body:text post_count:integer user_id:integer

rails db:migrate

b. Comments:

rails generate scaffold comment name:string body:text comment_count:integer post_id:integer

rails db:migrate

c. Users:

Add gem 'devise' to your Gemfile

bundle install

stop and restart your server 
bin/server

rails g devise:install

rails g devise user username:string avatar_url:string

rails db:migrate

show all views for devise 
rails g devise:views

Add to ApplicationsController
class ApplicationController < ActionController::Base
before_action :authenticate_user!
end

2. Make landing page all posts under routes

root 'posts#index'

3. Install annotate to visualize tables/models

rails g annotate:install

run
rails annotate_models

4. Added conditional navigation to application.html.erb
     <!-- conditional for user sessions/rendering links -->
      <% if current_user != nil %>
      <%= link_to "Your posts", posts_path %>
      |
      <%= link_to "Edit profile", edit_user_registration_path %>
      |
      <%= link_to "Sign out", destroy_user_session_path, method: :delete %>
      |
     
    
      <% else %>
      <%= link_to "Sign in", user_session_path %>
      |
      <%= link_to "Sign up", new_user_registration_path %>
      <% end %>

5. Add associations
class Comment < ApplicationRecord

  belongs_to :post
  has_many :comments
end

class Post < ApplicationRecord

  belongs_to :user
end

class User < ApplicationRecord

  has_many :posts       
end

a. Add the :counter_cache options to belongs_to
belongs_to :user, counter_cache: true

6. Only show current_user posts on index, new and create

  def index
    @posts = current_user.posts.order(created_at: :DESC)
  end

def new
    @post = current_user.posts.build
  end

def create
@post = current_user.posts.build(post_params)

    respond_to do |format|
      if @post.save
        format.html { redirect_to post_url(@post), notice: "Post was successfully created." }
        format.json { render :show, status: :created, location: @post }
      else
        format.html { render :new, status: :unprocessable_entity }
        format.json { render json: @post.errors, status: :unprocessable_entity }
      end
    end
  end

7. Add notice and alert to application.html.erb, delete notices on all files
    <!-- conditional to avoid duplicate alerts or notices -->
    <% if notice.present? %>
    <div style="color: green;">
      <%= notice %>
    </div>

    <% end %>
    <% if alert.present? %>
    <div style="color: red;">
      <%= alert %>
    </div>

    <% end %>

8. Allow Additional Parameters Through Security
class ApplicationController < ActionController::Base
  before_action :authenticate_user!

  before_action :configure_permitted_parameters, if: :devise_controller?
  
  def configure_permitted_parameters
    devise_parameter_sanitizer.permit(:sign_up, :keys => [:username, :avatar_url])
    
    devise_parameter_sanitizer.permit(:account_update, :keys => [:username, :avatar_url])
  end
end 

9. Show username at end on links on application.html.erb

<%= current_user.username %>


10. Add humanize helper to created_at
<td><%= time_ago_in_words(post.created_at) %> ago</td>

11. Add better redirects by adding redirect_to("/posts")
a. create, update, destroy
format.html { redirect_to posts_path, notice: "Post was successfully created." }
format.html { redirect_to posts_path, notice: "Post was successfully updated." }
format.html { redirect_to posts_path, notice: "Post was successfully destroyed." }
